From 70d7acdd1126be64748dfe762ecfd97655019590 Mon Sep 17 00:00:00 2001
From: Simon Kirsten <simonkirsten24@gmail.com>
Date: Sat, 19 Oct 2024 19:58:03 +0200
Subject: [PATCH] Remove pointerEvents and scroll hacks

---
 src/index.tsx | 41 +----------------------------------------
 1 file changed, 1 insertion(+), 40 deletions(-)

diff --git a/src/index.tsx b/src/index.tsx
index 76aad6d..f1e8f96 100644
--- a/src/index.tsx
+++ b/src/index.tsx
@@ -173,26 +173,9 @@ export function Root({
     onChange: (o: boolean) => {
       onOpenChange?.(o);
 
-      if (!o && !nested) {
-        restorePositionSetting();
-      }
-
       setTimeout(() => {
         onAnimationEnd?.(o);
       }, TRANSITIONS.DURATION * 1000);
-
-      if (o && !modal) {
-        if (typeof window !== 'undefined') {
-          window.requestAnimationFrame(() => {
-            document.body.style.pointerEvents = 'auto';
-          });
-        }
-      }
-
-      if (!o) {
-        // This will be removed when the exit animation ends (`500ms`)
-        document.body.style.pointerEvents = 'auto';
-      }
     },
   });
   const [hasBeenOpened, setHasBeenOpened] = React.useState<boolean>(false);
@@ -246,15 +229,6 @@ export function Root({
       !isOpen || isDragging || !modal || justReleased || !hasBeenOpened || !repositionInputs || !disablePreventScroll,
   });
 
-  const { restorePositionSetting } = usePositionFixed({
-    isOpen,
-    modal,
-    nested: nested ?? false,
-    hasBeenOpened,
-    preventScrollRestoration,
-    noBodyStyles,
-  });
-
   function getScale() {
     return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;
   }
@@ -734,15 +708,6 @@ export function Root({
     }
   }
 
-  React.useEffect(() => {
-    if (!modal) {
-      // Need to do this manually unfortunately
-      window.requestAnimationFrame(() => {
-        document.body.style.pointerEvents = 'auto';
-      });
-    }
-  }, [modal]);
-
   return (
     <DialogPrimitive.Root
       defaultOpen={defaultOpen}
@@ -757,6 +722,7 @@ export function Root({
         setIsOpen(open);
       }}
       open={isOpen}
+      modal={modal}
     >
       <DrawerContext.Provider
         value={{
@@ -803,11 +769,6 @@ export const Overlay = React.forwardRef<HTMLDivElement, React.ComponentPropsWith
     const composedRef = useComposedRefs(ref, overlayRef);
     const hasSnapPoints = snapPoints && snapPoints.length > 0;
 
-    // Overlay is the component that is locking scroll, removing it will unlock the scroll without having to dig into Radix's Dialog library
-    if (!modal) {
-      return null;
-    }
-
     const onMouseUp = React.useCallback((event: React.PointerEvent<HTMLDivElement>) => onRelease(event), [onRelease]);
 
     return (
-- 
2.47.0.windows.2

